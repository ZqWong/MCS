// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;


public class DateTimeHelper
{
    /// <summary>
    /// 月份
    /// </summary>
    public enum MonthType
    {
        January = 1,
        February = 2,
        March = 3,
        April = 4,
        May = 5,
        June = 6,
        July = 7,
        August = 8,
        September = 9,
        October = 10,
        November = 11,
        December = 12,
    }

    /// <summary>
    /// 时间类型
    /// </summary>
    public enum TimeType
    {
        Year,
        Month,
        Day,
        Hour,
        Minute,
        Second
    }

    /// <summary>
    /// 重新格式化时间（DateTime）
    /// </summary>
    /// <param name="time"></param>
    /// <param name="depth"></param>
    /// <returns></returns>
    public static string ConvertTimeToStandardFormatString(DateTime time, TimeType depth = TimeType.Second)
    {
        string rst;
        switch (depth)
        {
            case TimeType.Year:
                rst = time.ToString("yyyy");
                break;
            case TimeType.Month:
                rst = time.ToString("yyyyMM");
                break;
            case TimeType.Day:
                rst = time.ToString("yyyyMMdd");
                break;
            case TimeType.Hour:
                rst = time.ToString("yyyyMMddHH");
                break;
            case TimeType.Minute:
                rst = time.ToString("yyyyMMddHHmm");
                break;
            case TimeType.Second:
            default:
                rst = time.ToString("yyyyMMddHHmmss");
                break;
        }
        return rst;
    }

    /// <summary>
    /// 比较日期， 返回指定时间类型
    /// </summary>
    /// <param name="time1"></param>
    /// <param name="time2"></param>
    /// <param name="depth"></param>
    /// <returns></returns>
    public static int CompareDate(DateTime time1, DateTime time2, TimeType depth = TimeType.Second)
    {
        int rst = time1.Year - time2.Year;
        do
        {
            if (depth == TimeType.Year || rst != 0) { break; }

            rst = time1.Month - time2.Month;
            if (depth == TimeType.Month || rst != 0) { break; }

            rst = time1.Day - time2.Day;
            if (depth == TimeType.Day || rst != 0) { break; }

            rst = time1.Hour - time2.Hour;
            if (depth == TimeType.Hour || rst != 0) { break; }

            rst = time1.Minute - time2.Minute;
            if (depth == TimeType.Minute || rst != 0) { break; }

            rst = time1.Second - time2.Second;
        }
        while (false);
        return rst;
    }

    /// <summary>
    /// 尝试转换标准格式时间字符串到时间(DateTime)
    /// </summary>
    /// <param name="time"></param>
    /// <param name="date"></param>
    /// <returns></returns>
    public static bool TryConvertStandardFormatStringToTime(string time, out DateTime date)
    {

        bool success = false;
        int[] values = new int[6];
        int tmp = 0;
        if (int.TryParse(time.Substring(0, 4), out tmp))
        {
            values[0] = tmp;
            success = true;
            for (int i = 1; i < 6; i++)
            {
                int index = 2 + i * 2;
                if (index + 2 > time.Length)
                {
                    break;
                }
                if (int.TryParse(time.Substring(index, 2), out tmp))
                {
                    values[i] = tmp;
                }
            }
        }
        if (success)
        {
            date = new DateTime(values[0], values[1], values[2], values[3], values[4], values[5]);
        }
        else
        {
            date = DateTime.MinValue;
        }
        return success;
    }

    /// <summary>
    /// 时间戳转DateTime
    /// </summary>
    /// <param name="d"></param>
    /// <returns></returns>
    public static DateTime ConvertIntDateTime(double d)
    {
        System.DateTime time = System.DateTime.MinValue;
        System.DateTime startTime = TimeZone.CurrentTimeZone.ToLocalTime(new System.DateTime(1970, 1, 1));
        time = startTime.AddSeconds(d);
        return time;
    }

    /// <summary>
    /// DateTime转Int
    /// </summary>
    /// <param name="time"></param>
    /// <returns></returns>
    public static double ConvertDateTimeInt(System.DateTime time)
    {
        double intResult = 0;
        System.DateTime startTime = TimeZone.CurrentTimeZone.ToLocalTime(new System.DateTime(1970, 1, 1));
        intResult = (time - startTime).TotalSeconds;
        return intResult;
    }

    /// <summary>
    /// 年龄转时间戳
    /// </summary>
    /// <param name="age"></param>
    /// <returns></returns>
    public static double ConvertAgeToDouble(int age)
    {
        double result = 0;
        System.DateTime startTime = TimeZone.CurrentTimeZone.ToLocalTime(new System.DateTime(1970, 1, 1));
        System.DateTime time = TimeZone.CurrentTimeZone.ToLocalTime(new System.DateTime(1970 + age, 1, 1));
        result = (time - startTime).TotalSeconds;
        return result;
    }

    /// <summary>
    /// 时间戳转年龄
    /// </summary>
    /// <param name="d"></param>
    /// <returns></returns>
    public static int ConvertDoubleToAge(double d)
    {
        System.DateTime time = ConvertIntDateTime(d);
        return time.Year - 1970;
    }

    /// <summary>
    /// 获取所在周的第一天
    /// </summary>
    /// <param name="dt"></param>
    /// <returns></returns>
    public static DateTime GetStartTimeWithinSameWeek(DateTime dt)
    {
        var dayOfWeek = dt.DayOfWeek;
        DateTime start = new DateTime(dt.Year, dt.Month, dt.Day).AddDays(-(int)dayOfWeek);
        return start;
    }

    /// <summary>
    /// Format the value to time string (i.e. "1h 2m 3s", ...)
    /// </summary>
    /// <returns>The value to time string.</returns>
    /// <param name="value">Value.</param>
    /// <param name="valueType">Value type.</param>
    public static string FormatValueToTimeString(float value, TimeType valueType)
    {
        string rst;
        if (valueType == TimeType.Hour || valueType == TimeType.Day || valueType == TimeType.Month || valueType == TimeType.Year)
        {
            rst = string.Format("{0}h", value);
        }
        else
        {
            int carry1 = (int)value / 60;
            float truncation1 = value - carry1 * 60;
            if (valueType == TimeType.Minute)
            {
                if (carry1 > 0)
                {
                    rst = carry1 + "h" + (truncation1 > 0 ? " " + truncation1 + "m" : "");
                }
                else
                {
                    rst = truncation1 + "m";
                }
            }
            else
            {
                if (carry1 > 0)
                {
                    rst = truncation1 > 0 ? truncation1 + "s" : "";
                    int carry2 = carry1 / 60;
                    int truncation2 = carry1 % 60;
                    if (carry2 > 0)
                    {
                        rst = (truncation2 > 0 || truncation1 > 0 ? truncation2 + "m" : "") + (string.IsNullOrEmpty(rst) ? "" : " " + rst);
                        rst = carry2 + "h" + (string.IsNullOrEmpty(rst) ? "" : " " + rst);
                    }
                    else
                    {
                        rst = (truncation2 + "m " + rst).Trim();
                    }
                }
                else
                {
                    rst = truncation1 + "s";
                }
            }
        }

        return rst;
    }

    /// <summary>
    /// 获取时间戳
    /// </summary>
    /// <returns></returns>
    public static string getTimeStamp()
    {
        TimeSpan ts = DateTime.UtcNow - new DateTime(1970, 1, 1, 0, 0, 0, 0);
        return Convert.ToInt64(ts.TotalMilliseconds).ToString();
    }
}
